---
title: "02_clean.qmd"
format: html
editor: visual
author: "Anna Boateng: s175562, Marlies Goedknegt: s220675, Anne Gjelstrup: s194530, Katja Jagd: s185395, Olivia Ronnenberg: s183359"
---

## Part 02: clean

#### Import the required packages

```{r}

#| label: load packages
#| echo: false
#| message: false

library("tidyverse")
library("patchwork")

```

#### Cleaning of co-expression data

As stated before, data table 1 contains data on 20 co-expression modules. In the code below, the table is tidied, so that each column represents a single module, and the row lists all genes within that given module.

#### Cleaning of table 1

```{r}

#| label: cleaning data table 1

coexpression_clean <- coexpression_load |>
  add_column(genenr = str_c("gene_",
                            seq(from = 1,
                                to = 5585)),
# the second value is determined by the longest column in the data table with nrow(coexpression_load), aka the module with the highest number of genes
             .before = "Module 1") |>
  pivot_longer(cols = -genenr,
               names_to = "modules",
               values_to = "gene") |>
  pivot_wider(names_from = genenr,
              values_from = gene)

```

#### Cleaning of table 3

##### Before treatment

The headers of the regulators data are corrected and the column called "Mechanistic Network" is excluded from the data, since it is not relvant for further analysis.

```{r}

#| label: Correcting headers
#| echo: false

regulators_before_clean <- regulators_before_load |>
  set_names(as.character(slice(regulators_before_load, 1))) |>
  slice(-1) |>
  select(!"Mechanistic Network")


```

```{r}

#| label: Separating target molecule

regulators_before_clean <- regulators_before_clean |>
  mutate(Count = str_count(`Target molecules in dataset`, 
                           pattern = ",") + 1) |>
  arrange(desc(Count))

 
regulators_before_clean <- regulators_before_clean |>
  separate("Target molecules in dataset",
           str_c("Target molecule_",
                 seq(from = 1, to = regulators_before_clean |>
                       slice(1) |>
                       pull(Count))),
                 ",",
                 remove = TRUE,
                 extra = "warn",
                 fill = "warn") |>
  select(-Count)


```

```{r}

#| label: pivot longer (before)
#| 
pivot_before_treatment <- regulators_before_clean|> 
  pivot_longer(cols = starts_with("target"),
               names_to = "target_n",
               values_to = "target")
pivot_before_treatment

```

```{r}

#| label: removal of p-values above 0.05 (before)

p_value_removal_before <- regulators_before_clean |> 
  filter(as.numeric(`p-value of overlap`) <= 0.05)

p_value_removal_before

```

##### After treatment

As with the data regulators from before treatment the headers are corrected and the column called "Mehcanistic Network" is removed.

```{r}

#| label: Correct headers of table 3, after treatment
#| echo: false

regulators_after_clean <- regulators_after_load |>
  set_names(as.character(slice(regulators_after_load,1))) |>
  slice(-1) |> 
    select(!"Mechanistic Network")

```

```{r}
#| label: seperation of the target molecule column

count <- regulators_after_clean |> 
  mutate(length_TM = str_count(`Target molecules in dataset`,
                               pattern =",")+1) |> 
  arrange(desc(length_TM))
  
regulators_after_clean1 <- count |> 
  separate(col = "Target molecules in dataset",
           into = str_c("Target molecule_",
                 seq(from=1, to= count |> slice(1) %>%
  pull(length_TM))),
           ",",
           remove = TRUE,
           extra = "warn",
           fill = "warn") |> 
  select(!"length_TM")
regulators_after_clean1
```

```{r}
#| label: pivot longer 
pivot_after_treatment <- regulators_after_clean1 |> 
  pivot_longer(cols = starts_with("target"),
               names_to = "target_n",
               values_to = "target")
pivot_after_treatment
```

```{r}
#| label: removal of p-values above 0.05 

p_value_removal <- pivot_after_treatment |> 
  filter(`p-value of overlap` <= 0.05)
p_value_removal
```
