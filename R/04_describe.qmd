---
title: "03_describe.qmd"
format: html
editor: visual
author: "Anna Boateng: s175562, Marlies Goedknegt: s220675, Anne Gjelstrup: s194530, Katja Jagd: s185395, Olivia Ronnenberg: s183359"
---

# Part 04: describe

## Import the required packages

```{r}
#| label: load packages
#| message: false

library("tidyverse")
library("ggthemes")
library("patchwork")
library("gridExtra")

```

## Description of the data tables

After cleaning and augmenting the data, five dataframes will be present:

-   A table containing coexpression modules and the genes for the regulator molecules that play a role in each of these modules called "03_coexpression_aug"
-   A table containing the common regulator molecules between before and after treatment, along with their related target molecules called "03_expr_target_aug"
-   A table containing the common regulator molecules between before and after treatment along with their respective expression levels called "03_expr_intersect_aug"
-   A table containing the regulator molecules and their respective expression levels before treatment called "03_expr_before_aug"
-   A table containing the regulator moleules and their respective expression levels after treatment called "03_expr_after_aug"

These tables can be found as .tsv.gz files, generated by the previous code.

## Dimensions of the data

The data tables each consists of:

-   Table "coexpression_aug": 111700 observations and 2 variables.
-   Table "expr_before_aug": 849 observations and 5 variables.
-   Table "expr_after_aug": 595 observations and 5 variables.
-   Table "expr_intersect_aug": 397 observations and 8 variables.
-   Table "target_intersect_aug": 397 observations and 416 variables.

This can be analyzed with the code below.

### Dimensions of table coexpression_aug

```{r}
#| label: data dimensions 
#| echo: false

dim(coexpression_aug)
ncol(coexpression_aug)
nrow(coexpression_aug)
```

### Dimensions of table expr_before_aug

```{r}

#| label: data dimensions
#| echo: false

dim(expr_before_aug)
ncol(expr_before_aug)
nrow(expr_before_aug)
```

### Dimensions of table expr_after_aug

```{r}

#| label: data dimensions
#| echo: false

dim(expr_after_aug)
ncol(expr_after_aug)
nrow(expr_after_aug)
```

### Dimensions of table expr_intersect_aug

```{r}

#| label: data dimensions
#| echo: false

dim(expr_intersect_aug)
ncol(expr_intersect_aug)
nrow(expr_intersect_aug)
```

### Dimensions of table target_intersect_aug

```{r}

#| label: data dimensions
#| echo: false

dim(target_intersect_aug)
ncol(target_intersect_aug)
nrow(target_intersect_aug)
```

### Piechart of molecule types

```{r}
# Create a ggplot object with geom_bar
ggplot(expr_intersect_aug, aes(x = "", fill = molecule_type)) +
  #geom_col(color="black") +
  geom_bar(width = 1) +
  coord_polar(theta = "y") +
  geom_label(aes(x = 1.35,label = after_stat(count)), 
            stat = "count", 
            color = "white",
            position = position_stack(vjust = 0.5),
            show.legend = FALSE) +
  labs(
    title = "Molecule types of upstream regulators ",
    fill = "Molecule type",
    x = NULL,
    y = NULL
  ) +
  scale_color_colorblind() + 
  theme_void()
```

### Boxplot of gene expression levels before and after treatment

```{r}
#| label: boxplot of expression levels 
#| warning: false 

boxplot_before <- expr_before_aug |> 
  ggplot(aes(y = expr_log_ratio_before)) +
           geom_boxplot(show.legend = FALSE,
                        fill = "#F8766D")+
  labs(y = "Expr log ratio",
       subtitle = "Before treatment")+
  scale_y_continuous(limits = c(-5,5))+
  scale_x_continuous(limits = c(-1,1))

boxplot_after <- expr_after_aug |> 
  ggplot(aes(y = expr_log_ratio_after
             )) +
           geom_boxplot(show.legend = FALSE,
                        fill = "#00BFC4")+
  labs(y = "Expr log ratio",
       subtitle = "After treatment")+
  scale_y_continuous(limits = c(-5,5))+
  scale_x_continuous(limits = c(-1,1))

grid.arrange(boxplot_before, boxplot_after, ncol=2, widths = c(1,1))


#boxplot_expr <- boxplot_before + boxplot_after
#boxplot_expr + plot_annotation(
  #title = "Gene expression levels before and after treatment")
```
