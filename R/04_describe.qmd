---
title: "03_describe.qmd"
format: html
editor: visual
author: "Anna Boateng: s175562, Marlies Goedknegt: s220675, Anne Gjelstrup: s194530, Katja Jagd: s185395, Olivia Ronnenberg: s183359"
---

# Part 04: describe

## Import the required packages

```{r}
#| label: load packages
#| message: false

library("tidyverse")
library("ggthemes")
library("patchwork")

```

## Description of the data tables

After cleaning and augmenting the data, five dataframes will be present:

-   A table containing coexpression modules and the genes for the regulator molecules that play a role in each of these modules called "03_coexpression_aug"
-   A table containing the common regulator molecules between before and after treatment, along with their related target molecules called "03_expr_target_aug"
-   A table containing the common regulator molecules between before and after treatment along with their respective expression levels called "03_expr_intersect_aug"
-   A table containing the regulator molecules and their respective expression levels before treatment called "03_expr_before_aug"
-   A table containing the regulator moleules and their respective expression levels after treatment called "03_expr_after_aug"

These tables can be found as .tsv.gz files, generated by the previous code.

## Dimensions of the data

The data tables each consists of:

-   Table "coexpression_aug": 111700 observations and 2 variables.
-   Table "expr_before_aug": 849 observations and 5 variables.
-   Table "expr_after_aug": 595 observations and 5 variables.
-   Table "expr_intersect_aug": 397 observations and 8 variables.
-   Table "target_intersect_aug": 397 observations and 416 variables.

This can be analyzed with the code below.

### Dimensions of table coexpression_aug

```{r}
#| label: data dimensions
#| echo: false

dim(coexpression_aug)
ncol(coexpression_aug)
nrow(coexpression_aug)
```

### Dimensions of table expr_before_aug

```{r}

#| label: data dimensions
#| echo: false

dim(expr_before_aug)
ncol(expr_before_aug)
nrow(expr_before_aug)
```

### Dimensions of table expr_after_aug

```{r}

#| label: data dimensions
#| echo: false

dim(expr_after_aug)
ncol(expr_after_aug)
nrow(expr_after_aug)
```

### Dimensions of table expr_intersect_aug

```{r}

#| label: data dimensions
#| echo: false


dim(expr_intersect_aug)
ncol(expr_intersect_aug)
nrow(expr_intersect_aug)
```

### Dimensions of table target_intersect_aug

```{r}

#| label: data dimensions
#| echo: false

dim(target_intersect_aug)
ncol(target_intersect_aug)
nrow(target_intersect_aug)
```

## Barplots

### Piechart of molecule types

```{r}
# Create a ggplot object with geom_bar
ggplot(expr_intersect_aug, aes(x = "", fill = molecule_type)) +
  #geom_col(color="black") +
  geom_bar(width = 1) +
  coord_polar(theta = "y") +
  geom_text(aes(label = after_stat(count)), 
            stat = "count", 
            position = position_stack(vjust = 0.5)) +
  labs(
    title = "Molecule types of upstream regulators ",
    fill = "Molecule type",
    x = NULL,
    y = NULL
  ) +
  scale_color_colorblind()
```

### Barplot of target molecules for each upstream regulators after treatment

```{r}
ggplot(
  # Setting data
  data = target_intersect_aug,
  # Sorting it after highest frequency
  aes(x = upstream_regulator, y = n_target_after)
  )+ 
  # Making a barplot
  geom_col()+
  # Setting titles
  labs(
    title = "Target molecules after treatment",
    subtitle = "The number of target molecules for each upstream regulator present in the dataset after treatment",
    x = "Upstream regulator",
    y = "Target molecule count"
  )+
  # colorblind friendly colors
  scale_color_colorblind()
```


### Boxplot 
```{r}
#| label: boxplot of expression levels 
#| warning: false 

boxplot_before <- expr_before_aug |> 
  ggplot(aes(y = expr_log_ratio_before,
             fill = "#F8766D")) +
           geom_boxplot(show.legend = FALSE)+
  labs(y = "Expr log ratio",
       subtitle = "Before treatment")

boxplot_after <- expr_after_aug |> 
  ggplot(aes(y = expr_log_ratio_after,
             fill = "#00BFC4")) +
           geom_boxplot(show.legend = FALSE)+
  labs(y = "Expr log ratio",
       subtitle = "After treatment")

boxplot_expr <- boxplot_before + boxplot_after
boxplot_expr + plot_annotation(
  title = "Gene expression levels before and after treatment")
```

